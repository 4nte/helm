# Default values for home-assistant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  registry: docker.io
  repository: volantmq/volantmq
  tag: v0.4.0-rc.6
  pullPolicy: IfNotPresent

## Service configuration
service:
  type: ClusterIP
  annotations: {}
  labels: {}
  port: 1883
  clusterIP: None
  ## List of IP addresses at which the hass-configurator service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  publishNotReadyAddresses: false


metrics:
  enabled: false

#  podAnnotations:
#    prometheus.io/scrape: "true"
#    prometheus.io/port: "8080"

  # Enable this if you're using https://github.com/coreos/prometheus-operator
  serviceMonitor:
    enabled: true
    ## Specify a namespace if needed
    namespace: prometheus
    # fallback to the prometheus default unless specified
    interval: 3s
    #scrapeTimeout: 10s

    selector:
      release: prometheus-operator # prometheus operator release

serviceAccount:
  ## Specifies whether a ServiceAccount should be created
  ##
  create: false
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  name:

## Persist data to a persistent volume
persistence:
  enabled: true
  ## Data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 8Gi
  annotations: {}

testFramework:
  enabled: true
  image: "bats/bats"
  tag: "v1.1.0"
  securityContext: {}

readinessProbe:
  enable: true
  interval: 60
  timeout: 3
  initialDelay: 30
  
livenessProbe:
  enable: false
  initialDelay: 30
  timeout: 1

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /
  hosts:
    - chart-example.local
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# VolantMQ config
config: |
  system:
    log:
      console:
        level: info # available levels: debug, info, warn, error, dpanic, panic, fatal
    acceptor:
      maxIncoming: 1000
      preSpawn: 100
  plugins:
    enabled:
      - health
    config:
      health:
        - backend: health
          config:
            livenessEndpoint: live
            readinessEndpoint: ready
  auth:
    anonymous: true
    order:
      - internal
  mqtt:
    version:
      - v3.1.1
    keepAlive:
      period: 60
      force: false
    options:
      connectTimeout: 2
      offlineQoS0: true
      sessionDups: false
      retainAvail: true
      subsOverlap: false
      subsId: false
      subsShared: false
      subsWildcard: true
      receiveMax: 65535
      maxPacketSize: 268435455
      maxTopicAlias: 65535
      maxQoS: 2

